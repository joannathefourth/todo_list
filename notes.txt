Step 1: Define the Minimum Viable Product 


Core Features: 
1. Add a task
2. Mark a task as complete
3. Delete a task 
4. See list of tasks 

Optional advanced Features
1. Cool backgrounds and Features
2. Due Dates 
3. Categories/tags
4. User Accounts 
5. Dark mode
6. Drag and drop sorting
7. Cloud sync / database


Step 2: Choose the Stack
Frontend: React (Create React App or Vite)
State Management: React [useState]
Backend: None for now (we'll keep tasks in memory of localStorage)
Optional: Firebase or Express/Node.js for backend localStorage


Step 3. Kickoff - React App Setup


Basic structure

todo-app/
|---public/
|   --index.html
|---src/
|   |---App.js
|   |---TodoList.js
|   |---TodoItem.js
|    ---index.js
|---package.json



to create package.json: 
    npm init -y
then reinstall React Dependencies:
    npm install react react-dom
    npm install --save-dev react-scripts

add a minimal start script in package.json:
    "start": "react-scripts start",


if something is already runnning on this browser 
type : 
    lsof -i :8000
then: 
    kill -9 {PID}


always add node_modules to .gitignore file


if you previeously committed things you shouldnt have, run the following to clean it: 
    git rm -r --cached node_modules
    git rm -r --cached .DS_Store
    git rm -r --cached .env

Then recommit: 
    git add .gitignore
    git commit -m "Cleaned up gitignore and removed unncecessary files"
    git push 


Steps to push to remote repositiory

1. To add the remote repositiory
    git remote add origin https://github.com/joannathefourth/todo_list.git 
2. To confirm the remote repo was added
    git remote -v 

3. Push your code 
    git push -u origin main 


How to add and push it to Github:
    git add README.md 
    git commit -m "Add README file"
    git push 